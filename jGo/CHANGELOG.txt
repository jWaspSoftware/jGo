Version 1.0.1 - 29/10/2018

- An ftp support has been integrated to manage the migration, download and update the html document

- The "createAJorServer ()" method has been added to the jGo access point

- Some generic method has been added to the jGo access point

- The serialization version of some classes has been changed

- Some bugs have been fixed, and some test prints are eliminated in the packages: cloud.jgo.net.tcp - cloud.jgo.net.tcp.login

(Thanks to Marco Martire)




Version 1.0.2 - 07/11/2018

- Some bugs have been fixed

(Thanks to Marco Martire)




Version 1.0.3 - 12/11/2018

- Added methods for conversions between lists and arrays in the jGo access point

- Fixed some bugs in JON technology 

- Some bugs have been fixed in JjDom

(Thanks to Marco Martire)




Version 1.0.4 - 14/11/2018

- Test package deleted

- Some bugs in the HTTPServer class have been eliminated

- Added JOR functionality for chaining

- JOR has been completed

(Thanks to Marco Martire)




Version 1.0.5 - 21/11/2018

- Added methods to write and read json files

- Added new return type in JOR: JSON

- The jGo function has been placed outside the access point, in order to guarantee greater availability

- An extension of £Func has been created

- Added a new class to find smtp hosts

- created class j £, obviously it is an extension of jGo.
  In addition, it combines all the methods that require
  third-party libraries, such as javamail. 
  Therefore it is recommended to use this advanced
  class in maven projects.

- Added methods to send emails to : j£

- Some methods have been declared as deprecated

- Changes have been made to the jGo access point

- Added each method to the jGo access point

- The configuration bug of the TCPLoginServer has been fixed.

- Other changes have been made to the TCPLoginServer class

- Changed jGo phases

- Changed setting of the Home class

- Added webcam management methods to the enhanced access point
(Thanks to Marco Martire)



Version 1.0.6 - 27/11/2018

- Added the config package in the cloud.jgo.net package

- Moved the json methods to the enhanced jGo class

- Added a method in JjDom, which allows us to work on multiple documents:swicth()

- Resolved all bugs related to servers configurations

- A small utility class added: ServersUtils

- Resolved other server-related bugs

- Added new method to jGo, for the creation of a simple login server:createLoginServer()
(Thanks to Marco Martire)



Version 1.0.7 - 11/12/2018

- New methods have been added to the jQuerySupport interface

- The "getNodePath()" method has been added to the Node interface.

- Now even the commands can receive a value from input, just like the parameters.

- The "contains()" method has been added to the Node interface.

- all the nodes of the dom have been redefined.

- a new package has been added: cloud.jgo.jjdom.dom.nodes.xml : for xml nodes.

- the "inputSettable" interface was created in the package: cloud.jgo.utils.command.

- A new method has been created in the node interface: removeChildren ().

- Bugs have been fixed in the methods that create the elements - JjDom.

- New enum : jQuerySelector.

- Two methods have been added in the HTMLElement class : hide()/show()/getPropCss()...

- A new method has been created in the "Manipulable" interface: getElementsByName().

- Different methods have been redefined in JjDom.

- New methods have been added in the _W: WebUtils phase.

- The "getDocumentFormat()" method has been added to the Document interface.

- New method added to JjDom: download ().

- New method added to the access point jGo: play().
(Thanks to Marco Martire)



Version 1.0.8 - 13/12/2018

- We have redefined all the servers, and eliminated all the bugs deriving from the redefinition of the server configurations.

- A new interface has been created, but not important. It simply serves to group two methods - ManageableCommands

- We have tested and adjusted the methods that send / receive the commands - TCPServer

- Fixed bug in the "isConfigurated" method of the TCPServerLogin class

- fixed other bugs in the TCPLoginServer class

- Resolved BUG JOR, now we can also make mistakes when we insert the url_pattern in the annotation, it will be JOR to adapt it.
(Thanks to Marco Martire)



Version 1.0.9 - 01/03/2019

- I add the methods to color the strings to the main point jGo

- New class added: ColorString

- Added new method to the Terminal class:getName();

- I redefined a Terminal method : getCommandRequest();

- I have perfected the LocalPhaseTerminal class

- New Method > LocalPhaseTerminal > setPointerName();

- New Method > LocalCommand > setCommand();

- We deleted the welcome field in the DefaultPhase class, and then updated the serial version.

- New constructor for the XMLDocument class, for creating a blank document.

- appendChild () method of the XMLDocument class: redefined

- Serial version update

- Eliminated unexpected printing of the shareObject () method of the LocalCommand class

- Added new packages for colored nodes

- Added new class : TerminalColors

- Added new method in the JjDom class:documentTypeUsed()

- New exception in JjDom:InvalidDocumentTypeException()

- New jGo method:colorTheStringsSyntax()

- I have adapted different methods of the LocalCommand class, taking into account the subclasses

- New interface:Colorable

- fixed webcam bugs in the jGo enhanced access point

- Created two new methods in the Shareable interface

- New method > shared() > Parameter

- New method > getUnSharedParameters() > LocalCommand

- New Interface > Sharer

- New Interface > SharedExecution

- Added new static method in the HTMLElement interface:createNewElement()

- Now you can create new predefined types of html elements

- I have perfected the shareObject method of the LocalCommand class, so as to allow the sce user

give the name of the parameter that prints the to_string of the shared objects.

- I added the setHelp () method to the Parameter class

- I added the static "toString" method to the ColorLocalCommand class.

- I created the annotations that allow you to transform a runtime, an object in command.

- A new command has been added to the phase terminal, which takes care of performing the phases, based on certain criteria.

- New static command :phasesExecutorCommand

- Now, commands, phases and parameters can decide to execute only under certain circumstances.

- We added another feature: we can block the execution of a command or parameter until the associated phase is not satisfied or accessible

- Now commands, phases and parameters can be performed according to specific criteria

- New command : status > localPhaseTerminal 

- Created the cleanTerminal () method to clean the terminal

- Added new method to access point jGo: execConnectingOutputChannel () - excellent method 

- New Class cloud/jgo/utils/command/annotations/Configurable

- New command annotation : ParameterMethod

- When we want to specify a string argument for a parameter of a method, we use the £ symbol to do
the space between the strings.

- New JjDom methods - isMigrated() ecc ecc

- New phase enum : PhaseExecutionType

- New Phase class : PhaseGroup

- New method in the Phase interface: membershipGroup ()

- New features in the enhanced access point

- Now the Phase class can also share an execution

- I created a new class, it's PhaseExecution, a specific execution for the phases.

- New method in phase terminal : setCustomExecution()
Version 1.0.1 - 29/10/2018

- An ftp support has been integrated to manage the migration, download and update the html document

- The "createAJorServer ()" method has been added to the jGo access point

- Some generic method has been added to the jGo access point

- The serialization version of some classes has been changed

- Some bugs have been fixed, and some test prints are eliminated in the packages: cloud.jgo.net.tcp - cloud.jgo.net.tcp.login

(Thanks to Marco Martire)




Version 1.0.2 - 07/11/2018

- Some bugs have been fixed

(Thanks to Marco Martire)




Version 1.0.3 - 12/11/2018

- Added methods for conversions between lists and arrays in the jGo access point

- Fixed some bugs in JON technology 

- Some bugs have been fixed in JjDom

(Thanks to Marco Martire)




Version 1.0.4 - 14/11/2018

- Test package deleted

- Some bugs in the HTTPServer class have been eliminated

- Added JOR functionality for chaining

- JOR has been completed

(Thanks to Marco Martire)




Version 1.0.5 - 21/11/2018

- Added methods to write and read json files

- Added new return type in JOR: JSON

- The jGo function has been placed outside the access point, in order to guarantee greater availability

- An extension of £Func has been created

- Added a new class to find smtp hosts

- created class j £, obviously it is an extension of jGo.
  In addition, it combines all the methods that require
  third-party libraries, such as javamail. 
  Therefore it is recommended to use this advanced
  class in maven projects.

- Added methods to send emails to : j£

- Some methods have been declared as deprecated

- Changes have been made to the jGo access point

- Added each method to the jGo access point

- The configuration bug of the TCPLoginServer has been fixed.

- Other changes have been made to the TCPLoginServer class

- Changed jGo phases

- Changed setting of the Home class

- Added webcam management methods to the enhanced access point
(Thanks to Marco Martire)



Version 1.0.6 - 27/11/2018

- Added the config package in the cloud.jgo.net package

- Moved the json methods to the enhanced jGo class

- Added a method in JjDom, which allows us to work on multiple documents:swicth()

- Resolved all bugs related to servers configurations

- A small utility class added: ServersUtils

- Resolved other server-related bugs

- Added new method to jGo, for the creation of a simple login server:createLoginServer()
(Thanks to Marco Martire)



Version 1.0.7 - 11/12/2018

- New methods have been added to the jQuerySupport interface

- The "getNodePath()" method has been added to the Node interface.

- Now even the commands can receive a value from input, just like the parameters.

- The "contains()" method has been added to the Node interface.

- all the nodes of the dom have been redefined.

- a new package has been added: cloud.jgo.jjdom.dom.nodes.xml : for xml nodes.

- the "inputSettable" interface was created in the package: cloud.jgo.utils.command.

- A new method has been created in the node interface: removeChildren ().

- Bugs have been fixed in the methods that create the elements - JjDom.

- New enum : jQuerySelector.

- Two methods have been added in the HTMLElement class : hide()/show()/getPropCss()...

- A new method has been created in the "Manipulable" interface: getElementsByName().

- Different methods have been redefined in JjDom.

- New methods have been added in the _W: WebUtils phase.

- The "getDocumentFormat()" method has been added to the Document interface.

- New method added to JjDom: download ().

- New method added to the access point jGo: play().
(Thanks to Marco Martire)



Version 1.0.8 - 13/12/2018

- We have redefined all the servers, and eliminated all the bugs deriving from the redefinition of the server configurations.

- A new interface has been created, but not important. It simply serves to group two methods - ManageableCommands

- We have tested and adjusted the methods that send / receive the commands - TCPServer

- Fixed bug in the "isConfigurated" method of the TCPServerLogin class

- fixed other bugs in the TCPLoginServer class

- Resolved BUG JOR, now we can also make mistakes when we insert the url_pattern in the annotation, it will be JOR to adapt it.
(Thanks to Marco Martire)



Version 1.0.9 - in dev

- I add the methods to color the strings to the main point jGo

- Aggiungo una nuova classe: ColorString

- Ho tolto il modificatore final dal metodi getCommandRequest del terminale
- aggiunto un nuovo metodo al terminal:getName();
- abbiamo ridefinito il metodo dei terminali : getCommandRequest
- Stiamo perfezionando la classe LocalPhaseTerminal, la stiamo rendendo + flessibbile, inoltre adesso non siamo
+ vincolati a usare il comando di richiesta comandi, di default(£), ma possiamo specificare il nome del terminale.
- aggiunta nuova variabile statica a Parameter, LocalCommand e DefaultPhase:provvisorie
- aggiunto nuovo metodo al terminale delle fasi:setPointerName()
- aggiunto metodo LocalCommand, per impostare il comando vero e proprio.
- eliminato campo welcome nella classe DefaultPhase, e quindi abbiamo aggiornato la serial version della stessa.
- abbiamo reso la variabile currentPhase del Terminale delle fasi visibile anche alle sottoclassi
- abbiamo aggiunto un nuovo costruttore nella classe XMLDocument per permettere di creare documenti vuoti
- stiamo ridefinendo il metodo appendChild della classe XMLDocument
- quindi adesso possiamo creare un xmldocument vuoto, però una volta inserito il root, gli elementi poi dbbiamo
inserirli all'interno del root, non ha logica avere un file xml con + nodi root, non con JjDom.
- risolto bug imprevisto e grave nel costruttore della classe XMLElement, inoltre abbiamo aggiunto anche il serial version.
- Abbiamo aggiunto il serial version anche per XMLDocument
- eliminata stampa imprevista nel metodo shareObject() della classe LocalCommand, quando attribuiamo un valore pari a null.
- aggiunta la var statica tag_color a Element - provvisoria